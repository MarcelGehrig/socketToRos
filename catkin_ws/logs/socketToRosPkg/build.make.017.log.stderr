[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:55:35:[m[K [01;31m[Kerror: [m[Kparse error in template argument list
    ros::Publisher chatter_pub = n.advertise<std_msgs::float>("publisherEEROS", 1000);
[01;32m[K                                   ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:55:84:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kros::NodeHandle::advertise(const char [15], int)[m[Kâ€™
    ros::Publisher chatter_pub = n.advertise<std_msgs::float>("publisherEEROS", 1000);
[01;32m[K                                                                                    ^[m[K
In file included from [01m[K/opt/ros/kinetic/include/ros/ros.h:45:0[m[K,
                 from [01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:1[m[K:
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:248:15:[m[K [01;36m[Knote: [m[Kcandidate: template<class M> ros::Publisher ros::NodeHandle::advertise(const string&, uint32_t, bool)
     Publisher advertise(const std::string& topic, uint32_t queue_size, bool latch = false)
[01;32m[K               ^[m[K
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:248:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:55:84:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
    ros::Publisher chatter_pub = n.advertise<std_msgs::float>("publisherEEROS", 1000);
[01;32m[K                                                                                    ^[m[K
In file included from [01m[K/opt/ros/kinetic/include/ros/ros.h:45:0[m[K,
                 from [01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:1[m[K:
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:314:13:[m[K [01;36m[Knote: [m[Kcandidate: template<class M> ros::Publisher ros::NodeHandle::advertise(const string&, uint32_t, const SubscriberStatusCallback&, const SubscriberStatusCallback&, const VoidConstPtr&, bool)
   Publisher advertise(const std::string& topic, uint32_t queue_size,
[01;32m[K             ^[m[K
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:314:13:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:55:84:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
    ros::Publisher chatter_pub = n.advertise<std_msgs::float>("publisherEEROS", 1000);
[01;32m[K                                                                                    ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:60:12:[m[K [01;35m[Kwarning: [m[Kdeprecated conversion from string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
  server_ip = "0.0.0.0";
[01;32m[K            ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:61:12:[m[K [01;35m[Kwarning: [m[Kdeprecated conversion from string constant to â€˜[01m[Kchar*[m[Kâ€™ [-Wwrite-strings]
  server_ip = "127.0.0.1";
[01;32m[K            ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:67:21:[m[K [01;31m[Kerror: [m[Kaggregate â€˜[01m[Kmain(int, char**)::sockaddr_in serv_addr[m[Kâ€™ has incomplete type and cannot be defined
  struct sockaddr_in serv_addr;
[01;32m[K                     ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:69:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KAF_INET[m[Kâ€™ was not declared in this scope
  int sockfd = socket(AF_INET, SOCK_STREAM, 0);
[01;32m[K                      ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:69:31:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KSOCK_STREAM[m[Kâ€™ was not declared in this scope
  int sockfd = socket(AF_INET, SOCK_STREAM, 0);
[01;32m[K                               ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:69:45:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksocket[m[Kâ€™ was not declared in this scope
  int sockfd = socket(AF_INET, SOCK_STREAM, 0);
[01;32m[K                                             ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:72:7:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kserver[m[Kâ€™ does not name a type
  auto server = gethostbyname(server_ip); 
[01;32m[K       ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:74:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kserver[m[Kâ€™ was not declared in this scope
  if (server == NULL) {
[01;32m[K      ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:81:16:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kserver[m[Kâ€™ was not declared in this scope
  bcopy((char *)server->h_addr,(char *)&serv_addr.sin_addr.s_addr, server->h_length);
[01;32m[K                ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:82:33:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Khtons[m[Kâ€™ was not declared in this scope
  serv_addr.sin_port = htons(port);
[01;32m[K                                 ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:84:69:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconnect[m[Kâ€™ was not declared in this scope
  if (connect(sockfd,(struct sockaddr *) &serv_addr,sizeof(serv_addr)) < 0) 
[01;32m[K                                                                     ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:91:6:[m[K [01;31m[Kerror: [m[Kconflicting declaration â€˜[01m[Kint n[m[Kâ€™
  int n;
[01;32m[K      ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:31:19:[m[K [01;36m[Knote: [m[Kprevious declaration as â€˜[01m[Kros::NodeHandle n[m[Kâ€™
   ros::NodeHandle n;
[01;32m[K                   ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:106:5:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kros::NodeHandle[m[Kâ€™ and â€˜[01m[Kssize_t {aka long int}[m[Kâ€™)
   n = write(sockfd,b_write,sizeof(b_write)*8);
[01;32m[K     ^[m[K
In file included from [01m[K/opt/ros/kinetic/include/ros/ros.h:45:0[m[K,
                 from [01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:1[m[K:
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:165:17:[m[K [01;36m[Knote: [m[Kcandidate: ros::NodeHandle& ros::NodeHandle::operator=(const ros::NodeHandle&)
     NodeHandle& operator=(const NodeHandle& rhs);
[01;32m[K                 ^[m[K
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:165:17:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kssize_t {aka long int}[m[Kâ€™ to â€˜[01m[Kconst ros::NodeHandle&[m[Kâ€™
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:107:9:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator<[m[Kâ€™ (operand types are â€˜[01m[Kros::NodeHandle[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
   if (n < 0) std::cout << "ERROR writing to socket" << std::endl;
[01;32m[K         ^[m[K
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:110:5:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kros::NodeHandle[m[Kâ€™ and â€˜[01m[Kssize_t {aka long int}[m[Kâ€™)
   n = read(sockfd,b_read,sizeof(b_read)*8);
[01;32m[K     ^[m[K
In file included from [01m[K/opt/ros/kinetic/include/ros/ros.h:45:0[m[K,
                 from [01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:1[m[K:
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:165:17:[m[K [01;36m[Knote: [m[Kcandidate: ros::NodeHandle& ros::NodeHandle::operator=(const ros::NodeHandle&)
     NodeHandle& operator=(const NodeHandle& rhs);
[01;32m[K                 ^[m[K
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:165:17:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kssize_t {aka long int}[m[Kâ€™ to â€˜[01m[Kconst ros::NodeHandle&[m[Kâ€™
[01m[K/home/mgehrig2/git_repos/socketToRos/catkin_ws/src/socketToRosPkg/socketToRosMain.cpp:111:9:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator<[m[Kâ€™ (operand types are â€˜[01m[Kros::NodeHandle[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
   if (n < 0) std::cout << "ERROR reading from socket" << std::endl;
[01;32m[K         ^[m[K
make[2]: *** [CMakeFiles/socketToRos.dir/socketToRosMain.cpp.o] Error 1
make[1]: *** [CMakeFiles/socketToRos.dir/all] Error 2
make: *** [all] Error 2
